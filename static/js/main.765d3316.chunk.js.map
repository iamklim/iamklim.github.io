{"version":3,"sources":["ajaxRequest.js","Slider/SingleSlide/SingleSlide.js","Slider/Slider.js","Preloader/Preloader.js","App.js","serviceWorker.js","index.js"],"names":["ajaxRequest","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","onreadystatechange","this","readyState","DONE","responseParsed","JSON","parse","responseText","SingleSlide","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","genreList","react_default","a","createElement","Fragment","movie","genres","map","item","key","id","className","concat","name","title","src","poster","alt","imdbRating","isNaN","metascore","trailer_url","length","href","director","actors","overview","React","Component","Slider","movies","Slider_SingleSlide_SingleSlide","Preloader","App","_this","state","contentLoading","getData","movieItemsTMDb","TMDbAPI","OMDbAPI","that","getNowPlaying","_getNowPlaying","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee2","requestTMDb","posterPath","nowPlaying","wrap","_context2","prev","next","sent","results","forEach","poster_path","push","stop","getTMDbInfo","_getTMDbInfo","_callee3","i","currTMDbId","movieInfo","trailers","trailerUrl","lastTrailer","_context3","videos","site","imdb_id","getOMDbInfo","_getOMDbInfo","_callee4","currIMDbId","requestOMDb","_context4","Director","Actors","Metascore","sortByRating","_sortByRating","_callee5","_context5","sort","b","updateState","_updateState","_callee6","_context6","abrupt","stringify","setState","initSlider","_initSlider","_callee7","_context7","Swiper","effect","centeredSlides","slidesPerView","mousewheel","keyboard","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","_callee","_context","CSSTransition","in","timeout","classNames","unmountOnExit","src_Preloader_Preloader","appear","src_Slider_Slider","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.765d3316.chunk.js","sourcesContent":["export function ajaxRequest(url) {\r\n    return new Promise(function(resolve, reject) {\r\n        let xhr = new XMLHttpRequest();\r\n\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.send();\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (this.readyState === this.DONE) {\r\n                const responseParsed = JSON.parse(this.responseText);\r\n                resolve(responseParsed);\r\n            }\r\n        };\r\n    });\r\n}\r\n","import React from 'react';\r\nimport './SingleSlide.sass';\r\n\r\nclass SingleSlide extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        //let metascore = isNaN(this.props.movie.metascore) ? '-' : this.props.movie.metascore + '%';\r\n        const genreList = (\r\n            <>\r\n                {this.props.movie.genres.map((item) =>\r\n                    <div key={item.id} className=\"item__genre-element\">\r\n                        <div className={`item__genre-icon item__genre-icon--${item.id}`} />\r\n                        <div className=\"item__genre-name\" >{item.name}</div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n        return (\r\n            <div className=\"swiper-slide item\">\r\n                <div className=\"item__description item__title\">\r\n                    <span>{this.props.movie.title}</span>\r\n                </div>\r\n\r\n                <div className=\"item__img\">\r\n                    <img src={this.props.movie.poster} alt=\"Poster\" />\r\n\r\n                    <div className=\"item__description item__marks\">\r\n                        <div className=\" item__sidebar item__sidebar--imdb\">\r\n                            <span className=\"item__sidebar-title\">IMDb</span>\r\n                            <span className=\"item__sidebar-number\">{this.props.movie.imdbRating}</span>\r\n                        </div>\r\n\r\n                        {!isNaN(this.props.movie.metascore) &&\r\n                            <div className=\"item__sidebar item__sidebar--metascore\">\r\n                                <span className=\"item__sidebar-title item__sidebar-title--sm\">Критики</span>\r\n                                <span className=\"item__sidebar-number\">{this.props.movie.metascore + '%'}</span>\r\n                            </div>\r\n                        }\r\n\r\n                        {this.props.movie.trailer_url.length > 0 &&\r\n                            <div className=\"item__sidebar item__sidebar--trailer\">\r\n                                <span className=\"item__sidebar-title item__sidebar-title--sm\">Трейлер</span>\r\n                                <span className=\"item__sidebar-icon item__sidebar-icon--youtube\"/>\r\n                                <a className=\"item__sidebar-link\" href={this.props.movie.trailer_url} />\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"item__genre\">\r\n                            <div className=\"item__sidebar item__genre-box item__genre-box--sm\">\r\n                                {genreList}\r\n                            </div>\r\n                            <div className=\"item__sidebar item__genre-box item__genre-box--lg\">\r\n                                {genreList}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"item__description item__bottom\">\r\n\r\n                    <div className=\"item__cast\">\r\n                        <span className=\"item__director\">\r\n                            Режиссер: <span>{this.props.movie.director}</span>\r\n                        </span>\r\n                        <span className=\"item__actors\">\r\n                            В ролях: <span>{this.props.movie.actors}</span>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"item__overview\">\r\n                        <span>{this.props.movie.overview}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleSlide;\r\n","import React from 'react';\r\nimport 'swiper/dist/css/swiper.css';\r\nimport './Slider.sass';\r\n\r\nimport SingleSlide from './SingleSlide/SingleSlide';\r\n\r\nclass Slider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"swiper-container\">\r\n                <div className=\"swiper-wrapper\">\r\n                    {this.props.movies.map((item) => (\r\n                        <SingleSlide key={item.id} movie={item}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport './Preloader.sass';\r\n\r\nclass Preloader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loader\">\r\n                <div className=\"loader__spinner\">\r\n                    <div className=\"loader__spinner-square\"  />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preloader;\r\n","import React, {Component} from 'react';\r\nimport { ajaxRequest } from './ajaxRequest';\r\n\r\nimport './App.sass';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Swiper from 'swiper';\r\nimport Slider from './Slider/Slider';\r\nimport Preloader from \"./Preloader/Preloader\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            contentLoading: true\r\n        };\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        let movieItemsTMDb = [];\r\n        const TMDbAPI = \"3b07521ea25bf66106a9525b3054c8e9\";\r\n        const OMDbAPI = \"55018c43\";\r\n        const that = this;\r\n\r\n        async function getNowPlaying() {\r\n            const requestTMDb = `https://api.themoviedb.org/3/movie/now_playing?region=UA&language=ru-RU&api_key=${TMDbAPI}`;\r\n            const posterPath = `https://image.tmdb.org/t/p/original`; // lower resolution: https://image.tmdb.org/t/p/w370_and_h556_bestv2\r\n\r\n            const nowPlaying = await ajaxRequest(requestTMDb);\r\n            const nowPlayingResults = nowPlaying.results;\r\n\r\n            nowPlayingResults.forEach((item) => {\r\n                item.poster = posterPath + item.poster_path;\r\n                movieItemsTMDb.push(item);\r\n            });\r\n        }\r\n\r\n        async function getTMDbInfo() {\r\n            for (let i = 0; i < movieItemsTMDb.length; i++) {\r\n                let currTMDbId = movieItemsTMDb[i].id;\r\n                let requestTMDb = `https://api.themoviedb.org/3/movie/${currTMDbId}?api_key=${TMDbAPI}&append_to_response=external_ids,videos&language=ru-RU`;\r\n\r\n                const movieInfo = await ajaxRequest(requestTMDb);\r\n\r\n                let trailers = movieInfo.videos.results,\r\n                    trailerUrl = '';\r\n                if (trailers.length > 0) {\r\n                    let lastTrailer = trailers[trailers.length - 1];\r\n                    if (lastTrailer.site === \"YouTube\") {\r\n                        trailerUrl = `https://www.youtube.com/watch?v=${lastTrailer.key}`;\r\n                    }\r\n                }\r\n\r\n                movieItemsTMDb[i].imdb_id = movieInfo.imdb_id;\r\n                movieItemsTMDb[i].trailer_url = trailerUrl;\r\n                movieItemsTMDb[i].genres = movieInfo.genres;\r\n            }\r\n\r\n        }\r\n\r\n        async function getOMDbInfo() {\r\n            for (let i = 0; i < movieItemsTMDb.length; i++) {\r\n                let currIMDbId = movieItemsTMDb[i].imdb_id;\r\n                let requestOMDb = `http://www.omdbapi.com/?i=${currIMDbId}&apikey=${OMDbAPI}`;\r\n\r\n                const movieInfo = await ajaxRequest(requestOMDb);\r\n\r\n                if (isNaN(movieInfo.imdbRating)) { // may be \"N/A\"\r\n                    movieInfo.imdbRating = '-';\r\n                }\r\n\r\n                movieItemsTMDb[i].imdbRating = movieInfo.imdbRating;\r\n                movieItemsTMDb[i].director = movieInfo.Director;\r\n                movieItemsTMDb[i].actors = movieInfo.Actors;\r\n                movieItemsTMDb[i].metascore = movieInfo.Metascore; // may be \"N/A\"\r\n            }\r\n        }\r\n\r\n        async function sortByRating() {\r\n            movieItemsTMDb.sort(function (a, b) {\r\n                if (a.imdbRating > b.imdbRating) {\r\n                    return -1;\r\n                }\r\n                else if (a.imdbRating < b.imdbRating) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        async function updateState() {\r\n            return new Promise(function(resolve, reject) {\r\n                JSON.stringify(movieItemsTMDb);\r\n                resolve(\r\n                    that.setState({movies: movieItemsTMDb})\r\n                )\r\n            });\r\n        }\r\n\r\n        async function initSlider() {\r\n            return new Promise(function(resolve, reject) {\r\n                    new Swiper('.swiper-container', {\r\n                        effect: 'coverflow',\r\n                        centeredSlides: true,\r\n                        slidesPerView: 'auto',\r\n                        mousewheel: true,\r\n                        keyboard: true,\r\n                        coverflowEffect: {\r\n                            rotate: 20,\r\n                            stretch: 0,\r\n                            depth: 100,\r\n                            modifier: 1,\r\n                            slideShadows : true,\r\n                        },\r\n                    });\r\n                    resolve(\r\n                        that.setState({contentLoading: false})\r\n                    )\r\n            });\r\n        }\r\n\r\n        (async function(){\r\n            await getNowPlaying();\r\n            await getTMDbInfo();\r\n            await getOMDbInfo();\r\n            await sortByRating();\r\n            await updateState();\r\n            await initSlider();\r\n        })();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.state.contentLoading}\r\n                    timeout={500}\r\n                    classNames=\"animation\"\r\n                    unmountOnExit\r\n                >\r\n                    <Preloader/>\r\n                </CSSTransition>\r\n\r\n                <CSSTransition\r\n                    in={!this.state.contentLoading}\r\n                    timeout={1000}\r\n                    classNames=\"animation\"\r\n                    appear\r\n                >\r\n                    <div className=\"content\">\r\n                        <Slider movies={this.state.movies} />\r\n                    </div>\r\n                </CSSTransition>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}